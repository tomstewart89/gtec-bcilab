# ---------------------------------
# Finds ITPP toolkit
#
# Sets ITPP_FOUND
# Sets ITPP_LIBRARIES
# Sets ITPP_LIBRARY_DIRS
# Sets ITPP_LDFLAGS
# Sets ITPP_LDFLAGS_OTHERS
# Sets ITPP_INCLUDE_DIRS
# Sets ITPP_CFLAGS
# Sets ITPP_CFLAGS_OTHERS
#
# Adds library to target
# Adds include path
# ---------------------------------

IF(WIN32)
	FIND_PATH(PATH_ITPP include/itpp/itbase.h PATHS ${OV_CUSTOM_DEPENDENCIES_PATH}/itpp)
	IF(PATH_ITPP)
		SET(ITPP_FOUND TRUE)
		SET(ITPP_INCLUDE_DIRS ${PATH_ITPP}/include)
		SET(ITPP_LIBRARIES libblas.a libfftw3-3 liblapack.a libgcc.a libg2c.a)
		SET(ITPP_LIBRARIES_RELEASE itpp)
		SET(ITPP_LIBRARIES_DEBUG itppd)	
		SET(ITPP_LIBRARY_DIRS ${PATH_ITPP}/lib )
	ENDIF(PATH_ITPP)
ENDIF(WIN32)

IF(UNIX)
	INCLUDE("FindThirdPartyPkgConfig")
	pkg_check_modules(ITPP itpp)
ENDIF(UNIX)

IF(ITPP_FOUND)
	MESSAGE(STATUS "  Found it++...")
	SET(ITPP_LOADING_FAILURE FALSE)
	INCLUDE_DIRECTORIES(${ITPP_INCLUDE_DIRS})
	ADD_DEFINITIONS(${ITPP_CFLAGS})
	ADD_DEFINITIONS(${ITPP_CFLAGS_OTHERS})
	# LINK_DIRECTORIES(${ITPP_LIBRARY_DIRS})
			MESSAGE(STATUS " ${ITPP_LIBDIR}")
	FOREACH(ITPP_LIB ${ITPP_LIBRARIES})
		SET(ITPP_LIB1 "ITPP_LIB1-NOTFOUND")
		FIND_LIBRARY(ITPP_LIB1 NAMES ${ITPP_LIB} PATHS ${ITPP_LIBRARY_DIRS} ${ITPP_LIBDIR} NO_DEFAULT_PATH)
		IF(ITPP_LIB1)
			MESSAGE(STATUS "    [  OK  ] Third party lib ${ITPP_LIB1}")
			TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${ITPP_LIB1})
		ELSE(ITPP_LIB1)
			MESSAGE(STATUS "    [FAILED] Third party lib ${ITPP_LIB1}")
			SET(ITPP_LOADING_FAILURE TRUE)
		ENDIF(ITPP_LIB1)	
	ENDFOREACH(ITPP_LIB)
	FOREACH(ITPP_LIB ${ITPP_LIBRARIES_RELEASE})
		SET(ITPP_LIB1 "ITPP_LIB1-RELEASE-NOTFOUND")
		FIND_LIBRARY(ITPP_LIB1 NAMES ${ITPP_LIB} PATHS ${ITPP_LIBRARY_DIRS} ${ITPP_LIBDIR} NO_DEFAULT_PATH)
		IF(ITPP_LIB1)
			MESSAGE(STATUS "    [  OK  ] Third party lib ${ITPP_LIB1}")
			TARGET_LINK_LIBRARIES(${PROJECT_NAME} optimized ${ITPP_LIB1})
		ELSE(ITPP_LIB1)
			MESSAGE(STATUS "    [FAILED] Third party lib ${ITPP_LIB1}")
			SET(ITPP_LOADING_FAILURE TRUE)
		ENDIF(ITPP_LIB1)	
	ENDFOREACH(ITPP_LIB)
	FOREACH(ITPP_LIB ${ITPP_LIBRARIES_DEBUG})
		SET(ITPP_LIB1 "ITPP_LIB1-DEBUG-NOTFOUND")
		FIND_LIBRARY(ITPP_LIB1 NAMES ${ITPP_LIB} PATHS ${ITPP_LIBRARY_DIRS} ${ITPP_LIBDIR} NO_DEFAULT_PATH)
		IF(ITPP_LIB1)
			MESSAGE(STATUS "    [  OK  ] Third party lib ${ITPP_LIB1}")
			TARGET_LINK_LIBRARIES(${PROJECT_NAME} debug ${ITPP_LIB1})
		ELSE(ITPP_LIB1)
			MESSAGE(STATUS "    [FAILED] Third party lib ${ITPP_LIB1}")
			SET(ITPP_LOADING_FAILURE TRUE)
		ENDIF(ITPP_LIB1)	
	ENDFOREACH(ITPP_LIB)	
	
	#We declare itpp has add only if all loading work
	IF(NOT ITPP_LOADING_FAILURE)
		ADD_DEFINITIONS(-DTARGET_HAS_ThirdPartyITPP)
	ENDIF(NOT ITPP_LOADING_FAILURE)
	
ELSE(ITPP_FOUND)
	MESSAGE(STATUS "  FAILED to find it++...")
ENDIF(ITPP_FOUND)
